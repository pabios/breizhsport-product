name: 🧹 Lint & Static Analysis

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  lint:
    name: 🧼 Vérification du Code
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Cloner le repo
        uses: actions/checkout@v4

      - name: 🛠️ Installer PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo, pdo_pgsql

      - name: 🛠️ Installer les dépendances
        run: composer install --prefer-dist --no-progress

      - name: ✅ Vérification avec PHPStan
        run: vendor/bin/phpstan analyse --memory-limit=512M --level=max src/
        continue-on-error: true

      - name: ✅ Vérification du formatage PHP-CS-Fixer
        run: vendor/bin/php-cs-fixer fix --dry-run --diff
        continue-on-error: true

  tests:
    name: ✅ Exécuter les Tests
    runs-on: ubuntu-latest
    needs: lint  # S'assure que le lint passe avant les tests

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 📥 Cloner le repo
        uses: actions/checkout@v4

      - name: 🛠️ Installer PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo, pdo_pgsql

      - name: 🛠️ Installer les dépendances
        run: composer install --prefer-dist --no-progress

      - name: 🛠️ Configuration ENV pour les tests
        run: |
          cp .env.test .env
          echo "DATABASE_URL=postgresql://test_user:test_password@localhost:5432/test_db" >> .env

      - name: 🏗️ Initialiser la base de données de test
        run: |
          php bin/console doctrine:database:create --env=test
          php bin/console doctrine:migrations:migrate --no-interaction --env=test
          php bin/console doctrine:fixtures:load --no-interaction --env=test

      - name: 🚀 Lancer les tests avec PestPHP
        run: vendor/bin/pest --coverage

  sonarcloud:
    name: 🔍 Analyse de Code avec SonarCloud
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: 📥 Cloner le repo
        uses: actions/checkout@v4

      - name: 🛠️ Installer PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo, pdo_pgsql

      - name: 🛠️ Installer les dépendances
        run: composer install --prefer-dist --no-progress

      - name: 🔍 Analyse de Code avec SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.organization=pabios \
            -Dsonar.projectKey=breizhsport-product \
            -Dsonar.sources=src \
            -Dsonar.tests=tests \
            -Dsonar.php.coverage.reportPaths=coverage.xml \
            -Dsonar.host.url=https://sonarcloud.io